@model IEnumerable<TaskManagementSystem.ViewModels.GetRolesViewModels>

@{
    ViewData["Title"] = "GetRoles";
}

<h1>Roles</h1>

<p>
    <a asp-action="Create" id="saveRoleBtn">Create New</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.IsActive)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.IsActive)
            </td>
            <td>
                    <a asp-action="UpdateRoles" asp-controller="Role" asp-route-id="@item.Id" class="btn btn-warning">Edit</a>
                    <a asp-action="Details" asp-controller="Role" asp-route-id="@item.Id" class="btn btn-info">Details</a>
                    <a asp-action="Delete" asp-controller="Role" asp-route-id="@item.Id" class="btn btn-danger">Delete</a>
            </td>
        </tr>
}
    </tbody>
</table>
<script>
    $("#saveRoleBtn").click(function () {
        const role = {
            id: $("#roleId").val(),
            name: $("#roleName").val(),
            isActive: $("#isActive").is(":checked")
        };

        console.log("Sending data:", role); 

        $.ajax({
            url: "/Role/Create",
            type: "POST",
            contentType: "application/json",
            dataType: "json",
            data: JSON.stringify(role),
            success: function (response) {
                alert(response.message);
                window.location.href = "/Role/GetRoles";
            },
            error: function (xhr, status, error) {
                console.log("AJAX Error:", xhr.responseText);
                alert("Error updating role: " + xhr.responseText);
            }
        });
    });


</script>
